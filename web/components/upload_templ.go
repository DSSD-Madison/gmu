// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func PDFUpload(csrf string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"upload-container\" class=\"relative flex items-center justify-center min-h-screen bg-gray-100 cursor-pointer\"><form id=\"pdf-upload-form\" action=\"/upload\" method=\"post\" enctype=\"multipart/form-data\" class=\"z-10 w-full max-w-md p-6 bg-white rounded-lg shadow-md\" hx-encoding=\"multipart/form-data\" hx-post=\"/upload\" hx-target=\"#upload-response\" hx-swap=\"innerHTML\"><input type=\"hidden\" name=\"_csrf\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(csrf)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/upload.templ`, Line: 16, Col: 50}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\"><div id=\"file-status-display\" class=\"flex flex-col items-center justify-center w-full h-32 px-4 mb-4 text-center transition bg-white border-2 border-gray-300 border-dashed rounded-md\"><span id=\"upload-status-text\" class=\"text-gray-600\">Click anywhere or drag & drop a PDF</span></div><input type=\"file\" id=\"pdf-upload-input\" name=\"pdf\" accept=\"application/pdf\" class=\"hidden\" required> <button type=\"submit\" class=\"w-full px-4 py-2 font-bold text-white bg-blue-500 rounded cursor-pointer hover:bg-blue-700 focus:outline-none focus:shadow-outline\">Upload Selected File</button><div id=\"upload-response\" class=\"h-6 mt-4 text-sm text-center\"></div></form><div id=\"page-drag-overlay\" class=\"fixed inset-0 z-40 flex items-center justify-center hidden transition-opacity duration-200 bg-blue-500 bg-opacity-75 pointer-events-none\"><span class=\"text-3xl font-bold text-white\">Drop PDF Here</span></div></div><script>\n\t\t\t(function() {\n\t\t\t\tconst container = document.getElementById('upload-container');\n\t\t\t\tconst input = document.getElementById('pdf-upload-input');\n\t\t\t\tconst statusSpan = document.getElementById('upload-status-text');\n\t\t\t\tconst overlay = document.getElementById('page-drag-overlay');\n\t\t\t\tconst form = document.getElementById('pdf-upload-form');\n\n\t\t\t\tif (!container || !input || !statusSpan || !overlay || !form) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst showOverlay = () => {\n\t\t\t\t\toverlay.classList.remove('hidden');\n\t\t\t\t\toverlay.classList.add('opacity-100');\n\t\t\t\t};\n\n\t\t\t\tconst hideOverlay = () => {\n\t\t\t\t\toverlay.classList.remove('opacity-100');\n\t\t\t\t\toverlay.classList.add('opacity-0');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\toverlay.classList.add('hidden');\n\t\t\t\t\t\toverlay.classList.remove('opacity-0');\n\t\t\t\t\t}, 200);\n\t\t\t\t};\n\n\t\t\t\tconst handleFileSelection = () => {\n                    const defaultText = 'Click anywhere or drag & drop a PDF';\n\t\t\t\t\tconst files = input.files;\n\t\t\t\t\tif (files && files.length > 0) {\n\t\t\t\t\t\tstatusSpan.textContent = `Selected: ${files[0].name}`;\n\t\t\t\t\t\tstatusSpan.classList.add('text-green-700');\n\t\t\t\t\t\tstatusSpan.classList.remove('text-gray-600');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatusSpan.textContent = defaultText;\n\t\t\t\t\t\tstatusSpan.classList.remove('text-green-700');\n\t\t\t\t\t\tstatusSpan.classList.add('text-gray-600');\n                        input.value = ''; // Clear the input if no files (e.g., cancel)\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\twindow.addEventListener('dragover', (e) => { e.preventDefault(); showOverlay(); }, false);\n\t\t\t\twindow.addEventListener('dragenter', (e) => { e.preventDefault(); showOverlay(); }, false);\n\t\t\t\twindow.addEventListener('dragleave', (e) => {\n\t\t\t\t\tif (!e.relatedTarget || !document.documentElement.contains(e.relatedTarget)) {\n\t\t\t\t\t\thideOverlay();\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\n\t\t\t\twindow.addEventListener('drop', (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\thideOverlay();\n\t\t\t\t\tif (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n\t\t\t\t\t\tif (e.dataTransfer.files[0].type === \"application/pdf\") {\n\t\t\t\t\t\t\tinput.files = e.dataTransfer.files;\n\t\t\t\t\t\t\thandleFileSelection();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatusSpan.textContent = 'Please drop a PDF file.';\n                            input.value = ''; // Clear the underlying input\n\t\t\t\t\t\t\tsetTimeout(() => {\n                               if (!input.files || input.files.length === 0) handleFileSelection(); // Reset if still empty\n                           }, 3000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\n\t\t\t\tcontainer.addEventListener('click', (e) => {\n\t\t\t\t\tif (!e.target.closest('button') && !e.target.closest('a')) {\n\t\t\t\t\t\tinput.click();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tinput.addEventListener('change', handleFileSelection, false);\n\n\t\t\t})();\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base("PDF Upload").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
