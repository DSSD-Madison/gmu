package components

import (
	"fmt"
	"time"

	db "github.com/DSSD-Madison/gmu/pkg/db/generated"
)

func formatTime(t time.Time) string {
	// Return empty string if time is zero to avoid displaying default Go zero time
	if t.IsZero() {
		return ""
	}
	return t.Format("Jan 02, 2006 15:04")
}

templ RecentDocumentsTable(documents []db.Document, isAuthorized bool, isMaster bool) {
	@Base("Recent Documents Table", isAuthorized, isMaster) {
		<div class="overflow-x-auto shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
			<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
				<thead class="bg-gray-50 dark:bg-gray-700">
					<tr>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
							Title
						</th>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
							Filename
						</th>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
							Uploaded At
						</th>
						<th scope="col" class="px-3 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
							Indexed
						</th>
						<th scope="col" class="px-3 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
							Deletion
						</th>
					</tr>
				</thead>
				<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
					if len(documents) == 0 {
						<tr>
							<td colspan="5" class="px-6 py-4 whitespace-nowrap text-sm text-center text-gray-500 dark:text-gray-400">
								No recent documents found.
							</td>
						</tr>
					}
					for _, doc := range documents {
						<tr id={ fmt.Sprintf("document-row-%s", doc.ID.String()) }>
							<td class="px-6 py-4 whitespace-nowrap">
								// Adjusted max-width for shorter truncation
								<a href={ templ.SafeURL(fmt.Sprintf("/edit-metadata/%s", doc.ID.String())) } title={ doc.Title } class="block overflow-hidden whitespace-nowrap text-ellipsis max-w-[10rem] sm:max-w-[12rem] md:max-w-[15rem] text-sm font-medium text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-200">
									{ doc.Title }
								</a>
							</td>
							<td class="px-6 py-4 whitespace-nowrap">
								// Added truncation for filename
								<div title={ doc.FileName } class="block overflow-hidden whitespace-nowrap text-ellipsis max-w-[10rem] sm:max-w-[12rem] md:max-w-[15rem] text-sm text-gray-700 dark:text-gray-300">
									{ doc.FileName }
								</div>
							</td>
							<td class="px-6 py-4 whitespace-nowrap">
								<div class="text-sm text-gray-500 dark:text-gray-400">{ formatTime(doc.CreatedAt.Time) }</div>
							</td>
							<td class="px-3 py-4 whitespace-nowrap text-center text-sm">
								// Separate column for Index status
								if !doc.ToIndex.Bool {
									<span class="text-green-600 dark:text-green-400" title="Document is indexed">‚úî</span>
								} else {
									<span class="text-gray-400 dark:text-gray-500" title="Document pending indexing">‚è≥</span>
								}
							</td>
							<td class="px-3 py-4 whitespace-nowrap text-center text-sm">
								if doc.ToDelete {
									<span class="text-red-600 dark:text-red-400" title="Document marked for deletion">üî¥</span>
								} else {
									<span class="text-gray-400 dark:text-gray-500" title="Document not marked for deletion">üü¢</span>
								}
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	}
}