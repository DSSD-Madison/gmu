// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_documents.sql

package db

import (
	"context"

	"github.com/lib/pq"
)

const getDocumentsByURIs = `-- name: GetDocumentsByURIs :many
SELECT id, file_name, title, abstract, category, publish_date, source, region_id, s3_file, s3_file_preview, pdf_link, created_at, deleted_at
FROM documents 
WHERE s3_file = ANY($1::text[])
`

func (q *Queries) GetDocumentsByURIs(ctx context.Context, dollar_1 []string) ([]Document, error) {
	rows, err := q.db.QueryContext(ctx, getDocumentsByURIs, pq.Array(dollar_1))
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Document
	for rows.Next() {
		var i Document
		if err := rows.Scan(
			&i.ID,
			&i.FileName,
			&i.Title,
			&i.Abstract,
			&i.Category,
			&i.PublishDate,
			&i.Source,
			&i.RegionID,
			&i.S3File,
			&i.S3FilePreview,
			&i.PdfLink,
			&i.CreatedAt,
			&i.DeletedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
