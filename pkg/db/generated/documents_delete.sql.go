// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: documents_delete.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const deleteDocAuthorsByDocID = `-- name: DeleteDocAuthorsByDocID :exec
DELETE FROM doc_authors WHERE doc_id = $1
`

func (q *Queries) DeleteDocAuthorsByDocID(ctx context.Context, docID uuid.NullUUID) error {
	_, err := q.db.ExecContext(ctx, deleteDocAuthorsByDocID, docID)
	return err
}

const deleteDocCategoriesByDocID = `-- name: DeleteDocCategoriesByDocID :exec
DELETE FROM doc_categories WHERE doc_id = $1
`

func (q *Queries) DeleteDocCategoriesByDocID(ctx context.Context, docID uuid.NullUUID) error {
	_, err := q.db.ExecContext(ctx, deleteDocCategoriesByDocID, docID)
	return err
}

const deleteDocKeywordsByDocID = `-- name: DeleteDocKeywordsByDocID :exec
DELETE FROM doc_keywords WHERE doc_id = $1
`

func (q *Queries) DeleteDocKeywordsByDocID(ctx context.Context, docID uuid.NullUUID) error {
	_, err := q.db.ExecContext(ctx, deleteDocKeywordsByDocID, docID)
	return err
}

const deleteDocRegionsByDocID = `-- name: DeleteDocRegionsByDocID :exec
DELETE FROM doc_regions WHERE doc_id = $1
`

func (q *Queries) DeleteDocRegionsByDocID(ctx context.Context, docID uuid.NullUUID) error {
	_, err := q.db.ExecContext(ctx, deleteDocRegionsByDocID, docID)
	return err
}
