package components


templ PDFUpload() {
	@Base("PDF Upload") {
		<div id="upload-container" class="flex items-center justify-center min-h-screen bg-gray-100 relative cursor-pointer">
			<form id="pdf-upload-form"
				action="/upload"
				method="post"
				enctype="multipart/form-data"
				class="w-full max-w-md p-6 bg-white rounded-lg shadow-md z-10"
				hx-encoding="multipart/form-data"
				hx-post="/upload"
				hx-target="#upload-response"
				hx-swap="innerHTML"
				>

				<div id="file-status-display"
					 class="flex flex-col items-center justify-center w-full h-32 px-4 mb-4 text-center transition bg-white border-2 border-gray-300 border-dashed rounded-md">
					<span class="text-gray-600">Click anywhere or drag & drop a PDF</span>
				</div>

				<input type="file" id="pdf-upload-input" name="pdf" accept="application/pdf" class="hidden" required>

				<button type="submit"
						class="w-full px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700 focus:outline-none focus:shadow-outline cursor-pointer">
					Upload Selected File
				</button>

				<div id="upload-response" class="mt-4 text-center text-sm"></div>
			</form>

			<div id="page-drag-overlay"
				 class="hidden fixed inset-0 bg-blue-500 bg-opacity-75 z-40 flex items-center justify-center pointer-events-none transition-opacity duration-200">
				 <span class="text-white text-3xl font-bold">Drop PDF Here</span>
			</div>
		</div>

		<script>
			// Function scope to avoid polluting global namespace (JS comment - OK)
			(function() {
				// Check if elements exist before adding listeners (JS comment - OK)
				const uploadContainer = document.getElementById('upload-container');
				const fileInput = document.getElementById('pdf-upload-input');
				const fileStatusDisplaySpan = document.getElementById('file-status-display')?.querySelector('span'); // Safer query (JS comment - OK)
				const overlay = document.getElementById('page-drag-overlay');
				const form = document.getElementById('pdf-upload-form');

				// Exit if essential elements are missing (JS comment - OK)
				if (!uploadContainer || !fileInput || !fileStatusDisplaySpan || !overlay || !form) {
					console.error("Essential elements not found for PDF upload script. Script halted.");
					return;
				}

				// --- Drag and Drop Event Handling --- (JS comment - OK)
				const showOverlay = () => {
					overlay.classList.remove('hidden');
					void overlay.offsetWidth; // Force reflow (JS comment - OK)
					overlay.classList.add('opacity-100');
				}

				const hideOverlay = () => {
					overlay.classList.remove('opacity-100');
					overlay.classList.add('opacity-0');
					setTimeout(() => {
						overlay.classList.add('hidden');
						overlay.classList.remove('opacity-0'); // Reset (JS comment - OK)
					}, 200); // Match CSS transition (JS comment - OK)
				}

				window.addEventListener('dragover', (e) => {
					e.preventDefault();
					showOverlay();
				}, false);

				window.addEventListener('dragenter', (e) => {
					e.preventDefault();
					showOverlay();
				}, false);

				window.addEventListener('dragleave', (e) => {
					// More reliable check for leaving window (JS comment - OK)
					if (!e.relatedTarget || !document.documentElement.contains(e.relatedTarget)) {
                       hideOverlay();
                    }
				}, false);

				window.addEventListener('drop', (e) => {
					e.preventDefault();
					hideOverlay();

					if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {
						const droppedFile = e.dataTransfer.files[0];
						if (droppedFile.type === "application/pdf") {
							fileInput.files = e.dataTransfer.files;
							handleFileSelection();
						} else {
							fileStatusDisplaySpan.textContent = 'Please drop a PDF file.';
							fileInput.value = ''; // Clear invalid selection (JS comment - OK)
							setTimeout(() => {
                               if (!fileInput.files || fileInput.files.length === 0) {
								   handleFileSelection(); // Reset text (JS comment - OK)
                               }
                           }, 3000);
						}
					}
				}, false);

				// --- Click Event Handling --- (JS comment - OK)
				uploadContainer.addEventListener('click', (e) => {
					const clickedElement = e.target;
					// Check if click is not on button/interactive elements (JS comment - OK)
					if (!clickedElement.closest('button') && !clickedElement.closest('form a') /* Add others if needed */) {
						fileInput.click();
					}
				});

				// --- File Input Change Handling --- (JS comment - OK)
				fileInput.addEventListener('change', handleFileSelection, false);

				// --- Helper Function --- (JS comment - OK)
				function handleFileSelection() {
					if (fileInput.files && fileInput.files.length > 0) {
						fileStatusDisplaySpan.textContent = `Selected: ${fileInput.files[0].name}`;
						fileStatusDisplaySpan.classList.add('text-green-700');
						fileStatusDisplaySpan.classList.remove('text-gray-600');
						// Optional: Enable submit button (JS comment - OK)
					} else {
						fileStatusDisplaySpan.textContent = 'Click anywhere or drag & drop a PDF';
						fileStatusDisplaySpan.classList.remove('text-green-700');
						fileStatusDisplaySpan.classList.add('text-gray-600');
					}
				}

			})(); // IIFE (JS comment - OK)
		</script>
	}
}