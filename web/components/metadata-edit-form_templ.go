// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
// components/pdf_metadata_edit_form.templ

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func PDFMetadataEditForm(fileId, originalFilename, title, abstract, category, publishDate, source string, regionNames, keywordNames, authorNames []string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"container mx-auto mt-10 mb-10 p-6 max-w-2xl bg-white dark:bg-gray-800 rounded shadow-md\"><h1 class=\"text-2xl font-bold mb-4 text-gray-900 dark:text-white\">Edit Metadata</h1><p class=\"mb-6 text-gray-600 dark:text-gray-300\">Editing metadata for: <span class=\"font-medium text-gray-800 dark:text-white\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(originalFilename)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/metadata-edit-form.templ`, Line: 10, Col: 104}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</span> <span class=\"text-xs text-gray-400 dark:text-gray-500 block break-all\">File ID: ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(fileId)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/metadata-edit-form.templ`, Line: 11, Col: 96}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</span></p><form action=\"/save-metadata\" method=\"post\"><input type=\"hidden\" name=\"fileId\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(fileId)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/metadata-edit-form.templ`, Line: 15, Col: 57}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\"><div class=\"mb-4\"><label for=\"title\" class=\"block text-gray-700 dark:text-gray-200 text-sm font-bold mb-2\">Title</label> <input type=\"text\" id=\"title\" name=\"title\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/metadata-edit-form.templ`, Line: 20, Col: 65}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\" class=\"shadow appearance-none border border-gray-300 dark:border-gray-600 rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></div><div class=\"mb-4\"><label for=\"abstract\" class=\"block text-gray-700 dark:text-gray-200 text-sm font-bold mb-2\">Abstract</label> <textarea id=\"abstract\" name=\"abstract\" rows=\"4\" class=\"shadow appearance-none border border-gray-300 dark:border-gray-600 rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(abstract)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/metadata-edit-form.templ`, Line: 24, Col: 281}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</textarea></div><div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\"><div><label for=\"category\" class=\"block text-gray-700 dark:text-gray-200 text-sm font-bold mb-2\">Category</label> <input type=\"text\" id=\"category\" name=\"category\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(category)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/metadata-edit-form.templ`, Line: 29, Col: 75}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\" class=\"shadow appearance-none border border-gray-300 dark:border-gray-600 rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"><p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">e.g., article, research paper</p></div><div><label for=\"publish_date\" class=\"block text-gray-700 dark:text-gray-200 text-sm font-bold mb-2\">Publish Date</label> <input type=\"date\" id=\"publish_date\" name=\"publish_date\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(publishDate)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/metadata-edit-form.templ`, Line: 34, Col: 86}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\" class=\"shadow appearance-none border border-gray-300 dark:border-gray-600 rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"></div></div><div class=\"mb-4\"><label for=\"source\" class=\"block text-gray-700 dark:text-gray-200 text-sm font-bold mb-2\">Source</label> <input type=\"text\" id=\"source\" name=\"source\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(source)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/metadata-edit-form.templ`, Line: 39, Col: 68}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\" class=\"shadow appearance-none border border-gray-300 dark:border-gray-600 rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"><p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">Internal reference (e.g., bucket name)</p></div><hr class=\"my-6 border-gray-300 dark:border-gray-600\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = TagInputJS("regions", "Region Names", "region_names", "/regions", regionNames).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = TagInputJS("keywords", "Keyword Names", "keyword_names", "/keywords", keywordNames).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = TagInputJS("authors", "Author Names", "author_names", "/authors", authorNames).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "<div class=\"flex items-center justify-start mt-8\"><button type=\"submit\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">Save Metadata</button></div></form></div><script>\n            // --- Core Tagging Logic ---\n            function addTag(idPrefix, fieldName, value) {\n                const tagValue = value.trim();\n                if (!tagValue) return;\n\n                const container = document.getElementById(`${idPrefix}-tags-display`)?.closest('.tag-input-container');\n                if (!container) {\n                    console.error(`Tag input container not found for prefix: ${idPrefix}`);\n                    return;\n                }\n\n                const tagsDisplay = container.querySelector(`#${idPrefix}-tags-display`);\n                const hiddenInputsContainer = container.querySelector(`#${idPrefix}-hidden-inputs`);\n                const searchInput = container.querySelector(`#${idPrefix}-search-input`);\n                const suggestionsContainer = container.querySelector(`#${idPrefix}-suggestions`);\n\n                const existingInput = hiddenInputsContainer.querySelector(`input[name=\"${fieldName}\"][value=\"${CSS.escape(tagValue)}\"]`);\n                if (existingInput) {\n                    if (searchInput) searchInput.value = '';\n                    if (suggestionsContainer) suggestionsContainer.innerHTML = '';\n                    searchInput?.focus();\n                    return;\n                }\n\n                const hiddenInput = document.createElement('input');\n                hiddenInput.type = 'hidden';\n                hiddenInput.name = fieldName;\n                hiddenInput.value = tagValue;\n                hiddenInput.setAttribute('data-tag-value', tagValue);\n                hiddenInputsContainer.appendChild(hiddenInput);\n\n                const tagSpan = document.createElement('span');\n                tagSpan.setAttribute('data-tag-value', tagValue);\n                tagSpan.setAttribute('data-id-prefix', idPrefix);\n                tagSpan.setAttribute('data-field-name', fieldName);\n                tagSpan.className = 'tag-item bg-blue-100 text-blue-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300 inline-flex items-center';\n                tagSpan.textContent = tagValue + ' ';\n\n                const removeButton = document.createElement('button');\n                removeButton.type = 'button';\n                removeButton.className = 'ml-1 text-blue-600 hover:text-blue-800 focus:outline-none';\n                removeButton.innerHTML = '×';\n                removeButton.setAttribute('aria-label', `Remove ${tagValue}`);\n                removeButton.onclick = function() { removeTag(this); };\n                tagSpan.appendChild(removeButton);\n\n                const placeholder = tagsDisplay.querySelector('.tag-placeholder');\n                if (placeholder) {\n                    placeholder.remove();\n                }\n                tagsDisplay.appendChild(tagSpan);\n\n                if (searchInput) searchInput.value = '';\n                if (suggestionsContainer) suggestionsContainer.innerHTML = '';\n                searchInput?.focus();\n            }\n\n            function removeTag(buttonElement) {\n                const tagSpan = buttonElement.closest('.tag-item');\n                if (!tagSpan) return;\n\n                const tagValue = tagSpan.getAttribute('data-tag-value');\n                const idPrefix = tagSpan.getAttribute('data-id-prefix');\n                const fieldName = tagSpan.getAttribute('data-field-name');\n\n                const container = tagSpan.closest('.tag-input-container');\n                 if (!container || !tagValue || !idPrefix || !fieldName) {\n                    console.error(\"Could not remove tag, missing required elements or attributes.\");\n                    return;\n                 }\n                const hiddenInputsContainer = container.querySelector(`#${idPrefix}-hidden-inputs`);\n                const tagsDisplay = container.querySelector(`#${idPrefix}-tags-display`);\n\n                const hiddenInput = hiddenInputsContainer?.querySelector(`input[name=\"${fieldName}\"][data-tag-value=\"${CSS.escape(tagValue)}\"]`);\n                if (hiddenInput) {\n                    hiddenInput.remove();\n                } else {\n                    console.warn(\"Could not find hidden input for tag to remove:\", tagValue);\n                }\n\n                tagSpan.remove();\n\n                if (tagsDisplay && !tagsDisplay.querySelector('.tag-item')) {\n                    const placeholder = document.createElement('span');\n                    placeholder.className = 'tag-placeholder text-xs text-gray-400 italic p-1';\n                    let labelText = 'items';\n                    const labelElement = container.querySelector(`label[for='${idPrefix}-search-input']`);\n                     if (labelElement) {\n                        labelText = labelElement.textContent.replace(/\\s+Names$/i, '').toLowerCase();\n                    }\n                    placeholder.textContent = `No ${labelText} added yet.`;\n                    tagsDisplay.appendChild(placeholder);\n                }\n            }\n\n             // --- Global Event Listener (unchanged) ---\n            document.addEventListener('click', function(event) {\n                const allTagContainers = document.querySelectorAll('.tag-input-container');\n                allTagContainers.forEach(container => {\n                    const suggestionsDivId = container.querySelector('input[type=text]').id.replace('-search-input', '-suggestions');\n                    const suggestionsDiv = container.querySelector(`#${suggestionsDivId}`);\n                    if (suggestionsDiv && !container.contains(event.target)) {\n                       suggestionsDiv.innerHTML = '';\n                    }\n                });\n            });\n \t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base("Edit PDF Metadata").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
