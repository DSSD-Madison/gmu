// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func PDFUpload(csrf string, isAuthorized bool, isMaster bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"upload-container\" class=\"relative flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900\"><form id=\"pdf-upload-form\" action=\"/upload\" method=\"post\" enctype=\"multipart/form-data\" class=\"z-10 w-full max-w-md p-6 bg-white rounded-lg shadow-md dark:bg-gray-800\" hx-encoding=\"multipart/form-data\" hx-post=\"/upload\" hx-target=\"#upload-response\" hx-swap=\"innerHTML\" hx-indicator=\"#upload-indicator\"><input type=\"hidden\" name=\"_csrf\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(csrf)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/components/upload.templ`, Line: 18, Col: 50}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\"><div id=\"file-status-display\" class=\"flex flex-col items-center justify-center w-full h-32 px-4 mb-4 text-center transition bg-white border-2 border-gray-300 border-dashed rounded-md cursor-pointer dark:bg-gray-800 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700\"><span id=\"upload-status-text\" class=\"text-gray-600 dark:text-gray-300\">Click here or drag & drop a PDF/DOCX</span></div><input type=\"file\" id=\"pdf-upload-input\" name=\"pdf\" accept=\".pdf,.docx,application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document\" class=\"hidden\" required> <button id=\"upload-button\" type=\"submit\" class=\"w-full px-4 py-2 font-bold text-white bg-blue-500 rounded cursor-pointer hover:bg-blue-700 focus:outline-none focus:shadow-outline disabled:opacity-50 disabled:cursor-not-allowed\"><span class=\"button-text\">Upload Selected File</span> <span id=\"upload-indicator\" class=\"htmx-indicator\"><svg class=\"inline w-4 h-4 ml-2 text-white animate-spin\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle> <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg></span></button><div id=\"upload-response\" class=\"h-6 mt-4 text-sm text-center text-gray-700 dark:text-gray-300\"></div></form><div id=\"page-drag-overlay\" class=\"fixed inset-0 z-40 flex items-center justify-center hidden transition-opacity duration-200 bg-blue-500 bg-opacity-75 pointer-events-none dark:bg-blue-400 dark:bg-opacity-80\"><span class=\"text-3xl font-bold text-white dark:text-gray-900\">Drop PDF or DOCX Here</span></div></div><script>\n\t\t\t(function() {\n\t\t\t\tconst fileStatusDisplay = document.getElementById('file-status-display');\n\t\t\t\tconst input = document.getElementById('pdf-upload-input');\n\t\t\t\tconst statusSpan = document.getElementById('upload-status-text');\n\t\t\t\tconst overlay = document.getElementById('page-drag-overlay');\n\t\t\t\tconst form = document.getElementById('pdf-upload-form');\n\t\t\t\tconst uploadButton = document.getElementById('upload-button');\n\t\t\t\tconst buttonText = uploadButton.querySelector('.button-text');\n\n\t\t\t\tif (!fileStatusDisplay || !input || !statusSpan || !overlay || !form || !uploadButton || !buttonText) {\n\t\t\t\t\tconsole.error(\"Upload component elements not found.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst defaultStatusText = 'Click here or drag & drop a PDF/DOCX';\n\t\t\t\tconst originalButtonText = buttonText.textContent;\n\t\t\t\tconst allowedMimeTypes = [\n\t\t\t\t\t\"application/pdf\",\n\t\t\t\t\t\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n\t\t\t\t];\n\n\t\t\t\tconst showOverlay = () => {\n\t\t\t\t\toverlay.classList.remove('hidden');\n\t\t\t\t\toverlay.classList.add('opacity-100');\n\t\t\t\t};\n\n\t\t\t\tconst hideOverlay = () => {\n\t\t\t\t\toverlay.classList.remove('opacity-100');\n\t\t\t\t\toverlay.classList.add('opacity-0');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\toverlay.classList.add('hidden');\n\t\t\t\t\t\toverlay.classList.remove('opacity-0');\n\t\t\t\t\t}, 200);\n\t\t\t\t};\n\n\t\t\t\tconst handleFileSelection = () => {\n\t\t\t\t\tconst files = input.files;\n\t\t\t\t\tif (files && files.length > 0) {\n\t\t\t\t\t\tstatusSpan.textContent = `Selected: ${files[0].name}`;\n\t\t\t\t\t\tstatusSpan.classList.add('text-green-700', 'dark:text-green-400');\n\t\t\t\t\t\tstatusSpan.classList.remove('text-gray-600', 'dark:text-gray-300');\n\t\t\t\t\t\tuploadButton.disabled = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatusSpan.textContent = defaultStatusText;\n\t\t\t\t\t\tstatusSpan.classList.remove('text-green-700', 'dark:text-green-400');\n\t\t\t\t\t\tstatusSpan.classList.add('text-gray-600', 'dark:text-gray-300');\n\t\t\t\t\t\tinput.value = '';\n\t\t\t\t\t\tuploadButton.disabled = true;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\twindow.addEventListener('dragover', (e) => { e.preventDefault(); showOverlay(); }, false);\n\t\t\t\twindow.addEventListener('dragenter', (e) => { e.preventDefault(); showOverlay(); }, false);\n\t\t\t\twindow.addEventListener('dragleave', (e) => {\n\t\t\t\t\tif (!e.relatedTarget || !document.documentElement.contains(e.relatedTarget)) {\n\t\t\t\t\t\thideOverlay();\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\n\t\t\t\twindow.addEventListener('drop', (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\thideOverlay();\n\t\t\t\t\tif (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n\t\t\t\t\t\tconst droppedFile = e.dataTransfer.files[0];\n\t\t\t\t\t\tif (allowedMimeTypes.includes(droppedFile.type) || droppedFile.name.endsWith('.pdf') || droppedFile.name.endsWith('.docx')) {\n\t\t\t\t\t\t\tinput.files = e.dataTransfer.files;\n\t\t\t\t\t\t\thandleFileSelection();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatusSpan.textContent = 'Please drop a PDF or DOCX file.';\n\t\t\t\t\t\t\tstatusSpan.classList.add('text-red-700', 'dark:text-red-400');\n\t\t\t\t\t\t\tstatusSpan.classList.remove('text-gray-600', 'dark:text-gray-300');\n\t\t\t\t\t\t\tinput.value = '';\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tif (!input.files || input.files.length === 0) {\n\t\t\t\t\t\t\t\t\thandleFileSelection();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\n\t\t\t\tfileStatusDisplay.addEventListener('click', () => {\n\t\t\t\t\tinput.click();\n\t\t\t\t});\n\n\t\t\t\tinput.addEventListener('change', handleFileSelection, false);\n\n\t\t\t\tform.addEventListener('htmx:beforeRequest', function(evt) {\n\t\t\t\t\tuploadButton.disabled = true;\n\t\t\t\t\tbuttonText.textContent = 'Uploading...';\n\t\t\t\t\tdocument.getElementById('upload-response').textContent = '';\n\t\t\t\t});\n\n\t\t\t\tform.addEventListener('htmx:afterRequest', function(evt) {\n\t\t\t\t\tuploadButton.disabled = false;\n\t\t\t\t\tbuttonText.textContent = originalButtonText;\n\t\t\t\t\tif(evt.detail.successful) {\n\t\t\t\t\t\tconsole.error(\"Upload successful:\", evt.detail);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(\"Upload failed:\", evt.detail);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thandleFileSelection();\n\n\t\t\t})();\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base("File Upload", isAuthorized, isMaster).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
